$$include '../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"

glyph-module

glyph-block Derani-Shared : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes
	define u XH
	define ada ArchDepthA
	define adb ArchDepthB
	define l SB
	define r RightSB
	define middle : 0.5 * (l + r)

	create-glyph 'saqseoq' 0xF16BA : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.lhs Stroke
			g4 middle (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + ada)
			curl (r - OX) (u - adb)
			arcvh
			close

	create-glyph 'cecoa' 0xF16B9 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.lhs Stroke
			g4 [mix l r 0.6] (u - O) [heading Leftward]
			curl [mix l r 0.5] (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + ada) [heading Upward]

	create-glyph 'bubue' 0xF16B2 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.rhs Stroke
			g4 (l + OX) (u - Hook) [heading Upward]
			arcvh
			curl middle (u - O)
			archv
			flat (r - OX) (u - ada)
			curl (r - OX) (d + adb)
			arcvh
			flat middle (d + O) [heading Leftward]
			curl [mix l r 0.4] (d + O) [heading Leftward]

	derive-glyphs 'kikue' 0xF16C4 "cecoa" : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include [refer-glyph 'dotBelow']

	create-glyph 'rairua' 0xF16BB : glyph-proc
		local df : include : DivFrame para.diversityM 3
		local l df.leftSB
		local r df.rightSB
		local a (ada)
		local sw (df.mvs)
		define fine ShoulderFine
		include : df.markSet.e
		include : HBar.b ([mix l r 0.5]) r 0
		include : union
			dispiro
				widths.rhs sw
				flat (l + OX) (u - Hook) [heading Upward]
				arch.rhs u (sw -- sw)
				flat ([mix l r 0.5] + sw / 2) (u - a)
				curl ([mix l r 0.5] + sw / 2) 0 [heading Downward]
			dispiro
				flat ([mix l r 0.5] + sw / 2 - [HSwToV fine]) (u - a - 2) [widths.rhs fine]
				curl ([mix l r 0.5] + sw / 2 - [HSwToV fine]) (u - a)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat r (u - adb) [widths.rhs sw]
				curl r Descender

		if SLAB : begin
			include : HSerif.lb ([mix l r 0.5] - sw / 2) 0 SideJut
			include : HSerif.lb r Descender SideJut
			include : HSerif.rb r Descender SideJut
