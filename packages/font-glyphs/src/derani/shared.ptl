$$include '../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"

glyph-module

glyph-block Derani-Shared : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes
	define u XH
	define ada ArchDepthA
	define adb ArchDepthB
	define l SB
	define r RightSB
	define middle : 0.5 * (l + r)

	create-glyph 'saqseoq' 0xF16BA : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.lhs Stroke
			g4 middle (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + adb)
			curl (r - OX) (u - adb)
			arcvh
			close

	create-glyph 'cecoa' 0xF16B9 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.lhs Stroke
			g4 [mix l r 0.6] (u - O) [heading Leftward]
			curl [mix l r 0.5] (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + adb) [heading Upward]

	create-glyph 'bubue' 0xF16B2 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.rhs Stroke
			g4 (l + OX) (u - Hook) [heading Upward]
			arcvh
			curl middle (u - O)
			archv
			flat (r - OX) (u - ada)
			curl (r - OX) (d + adb)
			arcvh
			flat middle (d + O) [heading Leftward]
			curl [mix l r 0.4] (d + O) [heading Leftward]

	derive-glyphs 'kikue' 0xF16C4 "cecoa" : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include [refer-glyph 'dotBelow']

	create-glyph 'rairua' 0xF16BB : glyph-proc
		local a ada
		local sw Stroke
		define fine ShoulderFine
		include : MarkSet.e
		include : HBar.b l r 0
		include : VBar.l l 0 u
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - a - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - a)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat r (u - adb) [widths.rhs sw]
				curl r Descender

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb l 0 SideJut
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'laoliq' 0xF16BC : glyph-proc
		local a ada
		local sw Stroke
		define fine ShoulderFine
		include : MarkSet.e
		include [refer-glyph 'dotBelow']
		include : HBar.b l r 0
		include : VBar.l l 0 u
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - a - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - a)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat r (u - adb) [widths.rhs sw]
				curl r 0

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb l 0 SideJut
			include : HSerif.rb (r - [HSwToV HalfStroke]) 0 Jut

	create-glyph 'mamei_coda' 0xF16B1 : glyph-proc
		local a ada
		local sw Stroke
		define fine ShoulderFine
		include : MarkSet.e
		# include : HBar.b l r 0
		include : VBar.l l 0 u
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - a - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - a)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				g2 r (u - adb) [widths.rhs sw]
				curl (l + [HSwToV sw]) 0 [heading Leftward]

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb l 0 SideJut

	create-glyph 'mamei' 0xF16B0 : glyph-proc
		local df : include : DivFrame para.diversityM 3
		local l df.leftSB
		local r df.rightSB
		local a ada
		local sw df.mvs
		define fine ShoulderFine
		include : df.markSet.e
		include : HBar.b l r 0
		include : VBar.l l 0 u sw
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - a - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - a)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat ([mix l r 0.5] + [HSwToV sw] / 2) (u - adb) [widths.rhs sw]
				curl ([mix l r 0.5] + [HSwToV sw] / 2) 0
			dispiro
				flat ([mix l r 0.5] + [HSwToV sw] / 2 - [HSwToV fine]) (u - a - 2) [widths.rhs fine]
				curl ([mix l r 0.5] + [HSwToV sw] / 2 - [HSwToV fine]) (u - a)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat r (u - adb) [widths.rhs sw]
				curl r Descender

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	derive-glyphs 'pipoq' 0xF16B3 'saqseoq' : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : VBar.r (r - OX) [mix u 0 0.5] Descender Stroke
		if SLAB : begin
			include : HSerif.lb (r - OX - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - OX - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'fofuaq' 0xF16B4 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.rhs Stroke
			g4 (l + OX) (u - Hook) [heading Upward]
			arcvh
			curl middle (u - O)
			archv
			flat r (u - ada)
			curl r (d + adb)
			curl r Descender

		if SLAB : begin
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'gugui' 0xF16C3 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.lhs Stroke
			g4 [mix l r 0.7] (u - O) [heading Leftward]
			curl [mix l r 0.5] (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl ([mix l r 0.3333] + 0.25 * Stroke) d
			archv
			flat ([mix l r 0.6666] + HalfStroke) (d + ada) [heading Upward]
		include : dispiro
			widths.lhs Stroke
			curl ([mix l r 0.6666] - HalfStroke) (d + ada) [heading Downward]
			arcvh
			curl r d [heading Rightward]

	derive-glyphs 'jujuo' 0xF16BE 'gugui' : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : FlipAround [mix l r 0.5] (XH / 2)

	alias 'oaomo' 0xF16C5 'interpunct'

	create-glyph 'nanaq' 0xF16B5 : glyph-proc
		include : MarkSet.e
		local d 0
		local h [mix (u - Stroke) (d + Stroke) 0.2]
		include : dispiro
			widths.lhs Stroke
			flat r (u) [heading Leftward]
			curl [mix l r 0.5] (u) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl ([mix l r 0.5]) (d + O) [heading Rightward]
			archv
			# flat (r - OX) (d + ada)
			g2 (r - OX) [mix h d 0.5]
			arcvh
			flat [mix l r 0.5] h [heading Leftward]

	create-glyph 'chichao' 0xF16BF : glyph-proc
		include : MarkSet.e
		local d 0
		include : VSerif.dr r u VJut
		include : dispiro
			widths.lhs Stroke
			flat r u [heading Leftward]
			curl [mix l r 0.5] u [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + adb) [heading Upward]

	create-glyph 'dudeo' 0xF16B6 : glyph-proc
		include : MarkSet.e
		local d 0
		include : dispiro
			widths.center [AdviceStroke 5]
			curl (r - OX - Stroke + [AdviceStroke 5] / 2) [mix u d 0.4]
			g2 [mix l r 0.45] [mix u d 0.5]
			g4 middle (u - O) [widths.rhs.heading Stroke Rightward]
			archv
			flat (r - OX) (u - ada)
			curl (r - OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (l + OX) (d + adb) [heading Upward]

	derive-glyphs 'nhanhoq' 0xF16BD 'dudeo' : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : ScaleAround [mix l r 0.5] (XH / 2) 1 (-1)

# TODO:
#
# F16B7 titieq
# F16B8 zozeo
# F16C0 shoshia
# F16C1 veva
# F16C2 aqaq
# F16C6 hehaq
# F16CD hiatus mark
# F16CE diphthong mark
# F16D2 prefix mark
# F16D3 quotation mark
# F16D4 subordination mark
# F16D5 declarative full stop
# F16D6 other full stop
# F16D7 interrogative full stop
# F16DA null variable
# cartouches (F16D8 start, F16D9 end, F16DB space)
