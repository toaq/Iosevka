$$include '../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"
import [TieMark TieGlyph] from "@iosevka/glyph/relation"

glyph-module

glyph-block Derani-Shared : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes
	glyph-block-import Letter-Latin-Lower-M : SmallMArches

	define sw Stroke
	define fine ShoulderFine
	define u XH
	define d 0
	define ada ArchDepthA
	define adb ArchDepthB
	define l SB
	define r RightSB
	define middle : 0.5 * (l + r)
	# Glyphs that a cartouche can extend over
	define cartoucheBase : list 'mamei' 'mamei_coda' 'bubue' 'pipoq' 'fofuaq' 'nanaq' 'dudeo' 'titieq' 'zozeo' 'cecoa' 'saqseoq' 'rairua' 'laoliq' 'nhanhoq' 'jujuo' 'chichao' 'shoshia' 'veva' 'aqaq' 'gugui' 'kikue' 'oaomo' 'hehaq' 'deraniPrefixMark' 'deraniQuotationMark' 'deraniSquiggle' 'space' 'nbsp' 'deraniCompatNbsp'

	create-glyph 'saqseoq' 0xF16BA : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.lhs Stroke
			g4 middle (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + adb)
			curl (r - OX) (u - adb)
			arcvh
			close

	create-glyph 'cecoa' 0xF16B9 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.lhs Stroke
			g4 [mix l r 0.6] (u - O) [heading Leftward]
			curl [mix l r 0.5] (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + adb) [heading Upward]

	create-glyph 'bubue' 0xF16B2 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.rhs Stroke
			g4 (l + OX) (u - Hook) [heading Upward]
			arcvh
			curl middle (u - O)
			archv
			flat (r - OX) (u - ada)
			curl (r - OX) (d + adb)
			arcvh
			flat middle (d + O) [heading Leftward]
			curl [mix l r 0.4] (d + O) [heading Leftward]

	derive-glyphs 'kikue' 0xF16C4 "cecoa" : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include [refer-glyph 'dotBelow']

	create-glyph 'rairua' 0xF16BB : glyph-proc
		include : MarkSet.e
		include : HBar.b l r 0
		include : VBar.l l 0 u
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - ada - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - ada)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat r (u - adb) [widths.rhs sw]
				curl r Descender

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb l 0 SideJut
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'laoliq' 0xF16BC : glyph-proc
		include : MarkSet.e
		include [refer-glyph 'dotBelow']
		include : HBar.b l r 0
		include : VBar.l l 0 u
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - ada - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - ada)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				flat r (u - adb) [widths.rhs sw]
				curl r 0

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb l 0 SideJut
			include : HSerif.rb (r - [HSwToV HalfStroke]) 0 Jut

	create-glyph 'mamei_coda' 0xF16B1 : glyph-proc
		include : MarkSet.e
		# include : HBar.b l r 0
		include : VBar.l l 0 u
		include : union
			dispiro
				flat (l + [HSwToV sw] - [HSwToV fine]) (u - ada - 2) [widths.rhs fine]
				curl (l + [HSwToV sw] - [HSwToV fine]) (u - ada)
				arch.rhs u (sw -- sw) (swBefore -- fine)
				g2 r (u - adb) [widths.rhs sw]
				curl (l + [HSwToV sw]) 0 [heading Leftward]

		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb l 0 SideJut

	create-glyph 'mamei' 0xF16B0 : glyph-proc
		local df : include : DivFrame para.diversityM 3
		local l df.leftSB
		local r df.rightSB
		local sw df.mvs
		include : df.markSet.e
		include : HBar.b l r 0
		include : VBar.r r 0 Descender sw
		include : SmallMArches df u 0 0 0
		if SLAB : begin
			include : HSerif.lt l u SideJut
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'pipoq' 0xF16B3 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.rhs fine
			curl (r - [HSwToV sw]) (d + ada) [widths.lhs fine]
			arch.rhs 0 (sw -- sw) (swBefore -- fine)
			flat (l + OX) (d + adb)
			curl (l + OX) (u - ada)
			arcvh
			curl [mix (l + OX) r 0.5] (u - O)
			archv
			flat r (u - adb)
			curl r Descender

		if SLAB : begin
			include : HSerif.lb (r - OX - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - OX - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'fofuaq' 0xF16B4 : glyph-proc
		include : MarkSet.p
		include : dispiro
			widths.rhs Stroke
			g4 (l + OX) (u - Hook) [heading Upward]
			arcvh
			curl middle (u - O)
			archv
			flat r (u - ada)
			curl r (d + adb)
			curl r Descender

		set-base-anchor 'tieBelow' [mix l r 1.6] Descender

		if SLAB : begin
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	derive-glyphs 'hehaq' 0xF16C6 'fofuaq' : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : HBar.b [mix l r 0.35] r (d + [HSwToV sw]) OverlayStroke
		if SLAB : include : HSerif.rb r (d + [HSwToV sw]) SideJut OverlayStroke

	create-glyph 'zozeo' 0xF16B8 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.rhs Stroke
			g4 (l + OX) (u - Hook) [heading Upward]
			arcvh
			curl middle (u - O)
			archv
			flat r (u - ada)
			curl r (Descender + ada)
			arcvh
			curl middle Descender [heading Leftward]
			archv
			curl (l + OX) (Descender + ada) [heading Upward]
			flat middle (d + [HSwToV sw]) [widths.lhs.heading OverlayStroke Rightward]
			curl r (d + [HSwToV sw])

		if SLAB : begin
			include : HSerif.rb r (d + [HSwToV sw]) SideJut OverlayStroke

	create-glyph 'gugui' 0xF16C3 : glyph-proc
		local jointWidth : AdviceStroke 5
		include : MarkSet.e
		include : dispiro
			widths.lhs Stroke
			flat [mix l r 0.7] (u - O) [heading Leftward]
			curl [mix l r 0.5] (u - O) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl ([mix l r 0.3333] + 0.25 * Stroke) d
			archv
			flat ([mix l r 0.6666] + jointWidth / 2) (d + ada) [widths.lhs.heading jointWidth Upward]
		include : dispiro
			widths.lhs jointWidth
			curl ([mix l r 0.6666] - jointWidth / 2) (d + ada) [heading Downward]
			arcvh
			flat r d [widths.lhs Stroke]
			curl (r + SideJut) d [heading Rightward]

	derive-glyphs 'jujuo' 0xF16BE 'gugui' : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : FlipAround [mix l r 0.5] (XH / 2)

	alias 'oaomo' 0xF16C5 'interpunct'

	create-glyph 'nanaq' 0xF16B5 : glyph-proc
		include : MarkSet.e
		local h [mix (u - Stroke) (d + Stroke) 0.22]
		include : dispiro
			widths.lhs Stroke
			flat r (u) [heading Leftward]
			curl [mix l r 0.5] (u) [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			g2 ([mix l r 0.5]) (d + O) [heading Rightward]
			archv
			# flat (r - OX) (d + ada)
			g2 (r - OX) [mix h d 0.5]
			arcvh
			g2 [mix l r 0.6] h [widths.center.heading [AdviceStroke 4] Leftward]
			flat [mix l r 0.4] (h - 8) [heading Leftward]

	create-glyph 'chichao' 0xF16BF : glyph-proc
		include : MarkSet.e
		include : VSerif.dr r u VJut
		include : dispiro
			widths.lhs Stroke
			flat r u [heading Leftward]
			curl [mix l r 0.5] u [heading Leftward]
			archv
			flat (l + OX) (u - ada)
			curl (l + OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (r - OX) (d + adb) [heading Upward]

	create-glyph 'shoshia' 0xF16C0 : glyph-proc
		include : MarkSet.e
		local rx (r - [HSwToV Stroke] + [HSwToV ShoulderFine])
		include : VSerif.dr r u VJut
		include : dispiro
			widths.rhs ShoulderFine
			curl rx (d + adb)
			arch.rhs (d + O) (sw -- Stroke) (swBefore -- ShoulderFine)
			flat (l + OX) (d + adb)
			curl (l + OX) (u - ada)
			arcvh
			flat [mix l r 0.5] u [heading Rightward]
			flat r u [heading Rightward]

		include : VBar.r r (d + adb) Descender Stroke

		if SLAB : begin
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'titieq' 0xF16B7 : glyph-proc
		include : MarkSet.e
		set-base-anchor 'above' [mix l r 0.25] XH
		local rx (r - [HSwToV Stroke] + [HSwToV ShoulderFine])
		include : dispiro
			widths.rhs ShoulderFine
			heading Leftward
			curl rx (d + ada + 2)
			arch.rhs d (sw -- Stroke) (swBefore -- ShoulderFine)
			flat (l + OX) (d + adb)
			curl (l + OX) (u - ada)
			arch.rhs u (sw -- Stroke) (swAfter -- ShoulderFine)
			flat rx (u - ada - 2) [widths.rhs ShoulderFine]

		include : VBar.r r d Ascender Stroke

		if SLAB : begin
			include : HSerif.rt r Ascender SideJut
			include : HSerif.rb r d SideJut

	create-glyph 'dudeo' 0xF16B6 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.center [AdviceStroke 4]
			curl (r - OX - Stroke + [AdviceStroke 4] / 2) [mix u d 0.4]
			g2 [mix l r 0.45] [mix u d 0.5]
			g4 middle (u - O) [widths.rhs.heading Stroke Rightward]
			archv
			flat (r - OX) (u - ada)
			curl (r - OX) (d + adb)
			arcvh
			curl middle (d + O)
			archv
			flat (l + OX) (d + adb) [heading Upward]

	derive-glyphs 'nhanhoq' 0xF16BD 'dudeo' : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : ScaleAround [mix l r 0.5] (XH / 2) 1 (-1)

	create-glyph 'veva' 0xF16C1 : glyph-proc
		include : MarkSet.b
		include : dispiro
			widths.lhs Stroke
			curl [mix l r 0.5] Ascender [heading Leftward]
			archv
			curl (l + OX) u [heading Downward]

		include : dispiro
			widths.rhs Stroke
			flat (l + OX) u [heading Rightward]
			curl middle u
			archv
			flat (r - OX) (u - ada)
			curl (r - OX) (d + adb)
			arcvh
			flat middle (d + O) [heading Leftward]
			archv
			curl (l + OX) (d + ada) [heading Upward]

	create-glyph 'aqaq' 0xF16C2 : glyph-proc
		include : MarkSet.e
		local rx (r - [HSwToV Stroke] + [HSwToV ShoulderFine])
		include : dispiro
			widths.rhs ShoulderFine
			curl rx (d + adb)
			arch.rhs (d + O) (sw -- Stroke) (swBefore -- ShoulderFine)
			flat (l + OX) (d + adb)
			curl (l + OX) (u - ada)
			arcvh
			flat [mix l r 0.5] (u - O) [heading Rightward]
			curl [mix l r 0.6] (u - O) [heading Rightward]

		include : VBar.r r (d + adb) Descender Stroke

		if SLAB : begin
			include : HSerif.lb (r - [HSwToV HalfStroke]) Descender MidJutSide
			include : HSerif.rb (r - [HSwToV HalfStroke]) Descender Jut

	create-glyph 'deraniPrefixMark' 0xF16D2 : glyph-proc
		define df : include : DivFrame para.diversityII 1
		define l df.leftSB
		define r df.rightSB
		define middle [mix l r 0.5]
		define sw df.mvs
		define radius (PeriodRadius * 11 / 12)
		define inset : Math.min (O + radius * 5 / 3) ([mix d u 0.5] - radius * 1.5)
		include : DotAt middle (u - inset) radius
		include : DotAt middle (d + inset) radius

	alias 'deraniQuotationMark' 0xF16D3 'deraniPrefixMark'

	create-glyph 'deraniSubordinationMark' 0xF16D4 : glyph-proc
		define df : include : DivFrame para.diversityI 1
		define sw df.mvs
		# Deliberately built from the same width values in both monospace and
		# quasi-proportional mode
		define xStart (middle * 3 / 4)
		define xEnd Width
		include : HBar.b xStart xEnd d
		include : dispiro
			widths.rhs sw
			flat xEnd d [heading Downward]
			curl xEnd [mix d Descender 0.3]
			g2 (middle + [HSwToV sw]) Descender [widths.rhs.heading [AdviceStroke 5] Leftward]
		# Visually center the result
		include : Translate ([mix df.leftSB df.rightSB 0.5] + xStart * 2 / 3 - xEnd) 0

	define fullStopL : mix RightSB SB DesignParameters.bracketInside
	define fullStopR : mix RightSB SB DesignParameters.bracketOutside
	define fullStopRadius : Math.min DotRadius ((u - d) / 6.5)

	create-glyph 'deraniFullStop' null : glyph-proc
		include : dispiro
			widths.rhs sw
			flat fullStopR ParenTop
			curl fullStopR [mix ParenTop ParenBot 0.8]
			arcvh
			curl fullStopL Descender [heading Leftward]
		include : HBar.t fullStopL fullStopR ParenTop

	derive-glyphs 'deraniDeclarativeFullStop' 0xF16D5 "deraniFullStop" : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		define radius fullStopRadius
		include : DotAt fullStopL (d + radius) radius

	derive-glyphs 'deraniOtherFullStop' 0xF16D6 "deraniFullStop" : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		define radius fullStopRadius
		include : DotAt fullStopL [mix d u 0.5] radius
		include : DotAt fullStopL (d + radius) radius

	derive-glyphs 'deraniInterrogativeFullStop' 0xF16D7 "deraniFullStop" : function [src gr] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		define radius fullStopRadius
		include : DotAt fullStopL (u - radius) radius
		include : DotAt fullStopL [mix d u 0.5] radius
		include : DotAt fullStopL (d + radius) radius

	create-glyph 'deraniCartoucheStart' 0xF16D8 : glyph-proc
		set-width 0

	alias 'deraniCartoucheEnd' 0xF16D9 'deraniCartoucheStart'

	create-glyph 'deraniSquiggle' null : glyph-proc
		include : dispiro
			widths.rhs sw
			flat (l + OX) (d + adb)
			curl (l + OX) (u - ada)
			arcvh
			curl middle (u - O) [heading Rightward]
		include : dispiro
			widths.rhs sw
			flat (r - OX) (u - adb)
			curl (r - OX) (d + adb)
			arcvh
			curl middle (d + O) [heading Leftward]

	alias 'deraniCompatNbsp' 0xF16DB 'space'

	# I copied this from tie.ptl and changed it a little
	glyph-block-import Mark-Shared-Metrics : markHalfStroke
	glyph-block-import Mark-Shared-Metrics : markMiddle

	define belowTieBase     Descender
	define belowTieBottom : belowTieBase - (0.1 * XH)
	define belowTieTop    : belowTieBase - (-0.2 * XH)
	define belowTieMid    : mix belowTieBottom belowTieTop 0.5

	local tieLeft [mix 0 markMiddle 0.5]
	local tieRight (-tieLeft)
	local ms (markHalfStroke * 2)

	define [TieBelowAnchors] : glyph-proc
		set-mark-anchor 'tieBelow' 0 belowTieBase 0 belowTieBottom
		set-base-anchor 'belowBraceL' tieLeft belowTieMid
		set-base-anchor 'belowBraceR' tieRight belowTieMid

	create-glyph 'deraniHiatusMark' 0xF16CD : glyph-proc
		set-width 0
		include : TieBelowAnchors
		TieGlyph.set currentGlyph
		include : dispiro
			widths.center ms
			flat tieLeft belowTieTop
			archv
			curl tieRight belowTieBottom

	create-glyph 'deraniDiphthongMark' 0xF16CE : glyph-proc
		set-width 0
		include : TieBelowAnchors
		TieGlyph.set currentGlyph
		include : dispiro
			widths.center ms
			flat tieLeft belowTieTop
			curl tieRight belowTieTop
		include : dispiro
			widths.center ms
			curl (tieRight - [HSwToV ms] / 2) (belowTieTop - ms / 2) [heading Downward]
			arcvh
			curl ([mix tieLeft tieRight 0.6] - [HSwToV ms] / 2) belowTieBottom [heading Leftward]

	define cy (ParenTop + [HSwToV sw] / 2)
	define cOvershoot (Width * para.diversityII / 2)
	define [cLength src] [query-glyph src].advanceWidth
	define cCurlWidth (1.2 * (r - middle))

	# Generate nudged variants
	foreach [base {'cecoa' 'gugui' 'kikue' 'aqaq'}] : begin
		derive-glyphs "\(base).nudgeRight" null base : function [src gr] : glyph-proc
			include [refer-glyph src] AS_BASE ALSO_METRICS
			include : ApparentTranslate (0.06 * Width) 0
	foreach [base {'bubue' 'fofuaq' 'hehaq' 'jujuo'}]: begin
		derive-glyphs "\(base).nudgeLeft" null base : function [src gr] : glyph-proc
			include [refer-glyph src] AS_BASE ALSO_METRICS
			include : ApparentTranslate (-0.06 * Width) 0

	# Generate cartouche variants
	foreach [base cartoucheBase] : begin
		foreach [tail {'' '.nudgeRight' '.nudgeLeft'}] : begin
			local name "\(base)\(tail)"
			if [query-glyph name] : begin
				derive-glyphs "\(base).c\(tail)" null name : function [src gr] : glyph-proc
					include [refer-glyph src] AS_BASE ALSO_METRICS
					include : HBar.t (-SideJut) ([cLength src] + cOvershoot) cy (markHalfStroke * 2)
				derive-glyphs "\(base).c.end\(tail)" null name : function [src gr] : glyph-proc
					include [refer-glyph src] AS_BASE ALSO_METRICS
					define curlStart ([cLength src] - [mix 0 cCurlWidth 0.3])
					include : dispiro
						widths.rhs (markHalfStroke * 2)
						flat 0 cy
						curl (curlStart - 0.5 * cCurlWidth) cy
						g2 (curlStart + 0.5 * cCurlWidth) (cy - 0.8 * ada)

	# Null variable symbol is constructed as a squiggle + cartouche
	alias 'deraniNullVariable' 0xF16DA 'deraniSquiggle.c.end'
